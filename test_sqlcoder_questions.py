#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ sqlcoder:latest –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö
"""

import sys
import os
import asyncio
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

from src.services.query_service import QueryService
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

async def test_sqlcoder_questions():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ sqlcoder:latest –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö"""
    try:
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è sqlcoder
        os.environ['OLLAMA_MODEL'] = 'sqlcoder:latest'
        
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å
        query_service = QueryService()
        
        # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã
        test_questions = [
            "–ü–æ–∫–∞–∂–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
            "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –æ—Ç–¥–µ–ª–∞–º", 
            "–ü–æ–∫–∞–∂–∏ –ø–æ—Ä—É—á–µ–Ω–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü",
            "–ü–ª–∞—Ç–µ–∂–∏ –ø–æ –∫–ª–∏–µ–Ω—Ç–∞–º",
            "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –æ—Ç–¥–µ–ª–∞–º"
        ]
        
        print("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ sqlcoder:latest –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö")
        print("=" * 70)
        
        for i, question in enumerate(test_questions, 1):
            print(f"\nüîç –í–æ–ø—Ä–æ—Å {i}: {question}")
            print("-" * 50)
            
            try:
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º SQL
                sql = await query_service.generate_sql(question, {})
                print(f"‚úÖ SQL: {sql}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ SQL
                if sql and sql.strip():
                    if sql.lower().startswith('select'):
                        print("‚úÖ –ö–∞—á–µ—Å—Ç–≤–æ: –í–∞–ª–∏–¥–Ω—ã–π SELECT –∑–∞–ø—Ä–æ—Å")
                    elif "–Ω–µ –º–æ–≥—É" in sql.lower() or "–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ" in sql.lower():
                        print("‚ö†Ô∏è –ö–∞—á–µ—Å—Ç–≤–æ: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞")
                    else:
                        print("‚ùì –ö–∞—á–µ—Å—Ç–≤–æ: –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ")
                else:
                    print("‚ùå –ö–∞—á–µ—Å—Ç–≤–æ: –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç")
                    
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ sqlcoder –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")

if __name__ == "__main__":
    asyncio.run(test_sqlcoder_questions())
