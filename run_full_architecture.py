#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–æ–ª–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã NL‚ÜíSQL —Å–∏—Å—Ç–µ–º—ã
–í–∫–ª—é—á–∞–µ—Ç: FastAPI —Å–µ—Ä–≤–∏—Å, Mock Customer API, –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
"""

import subprocess
import time
import signal
import sys
import os
from pathlib import Path

def run_command(command, name, port):
    """–ó–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥—ã –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ"""
    try:
        print(f"üöÄ –ó–∞–ø—É—Å–∫ {name} –Ω–∞ –ø–æ—Ä—Ç—É {port}...")
        process = subprocess.Popen(
            command,
            shell=True,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            preexec_fn=os.setsid if os.name != 'nt' else None
        )
        return process
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ {name}: {e}")
        return None

def check_port(port):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞"""
    import socket
    try:
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
            s.settimeout(1)
            result = s.connect_ex(('localhost', port))
            return result == 0
    except:
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    print("üèóÔ∏è –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã NL‚ÜíSQL —Å–∏—Å—Ç–µ–º—ã...")
    print("=" * 60)
    
    # –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è –∑–∞–ø—É—Å–∫–∞
    services = [
        {
            "name": "Mock Customer API",
            "command": "cd /mnt/ai/cnn/sql4A && python src/mock_customer_api.py",
            "port": 8080,
            "url": "http://localhost:8080"
        },
        {
            "name": "FastAPI NL‚ÜíSQL Service", 
            "command": "cd /mnt/ai/cnn/sql4A && python src/api/main.py",
            "port": 8000,
            "url": "http://localhost:8000"
        },
        {
            "name": "Web Interface",
            "command": "cd /mnt/ai/cnn/sql4A && python src/web_interface.py", 
            "port": 3000,
            "url": "http://localhost:3000"
        }
    ]
    
    processes = []
    
    try:
        # –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
        for service in services:
            process = run_command(service["command"], service["name"], service["port"])
            if process:
                processes.append((process, service))
                print(f"‚úÖ {service['name']} –∑–∞–ø—É—â–µ–Ω (PID: {process.pid})")
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å {service['name']}")
                return
        
        print("\n‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...")
        time.sleep(5)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
        print("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤:")
        for process, service in processes:
            if check_port(service["port"]):
                print(f"‚úÖ {service['name']} - –†–∞–±–æ—Ç–∞–µ—Ç ({service['url']})")
            else:
                print(f"‚ùå {service['name']} - –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        
        print("\nüåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:3000")
        print("üìö API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs")
        print("üîß Mock API: http://localhost:8080")
        print("\nüõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        
        # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        while True:
            time.sleep(1)
            
    except KeyboardInterrupt:
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...")
        
        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
        for process, service in processes:
            try:
                if os.name != 'nt':
                    os.killpg(os.getpgid(process.pid), signal.SIGTERM)
                else:
                    process.terminate()
                print(f"‚úÖ {service['name']} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            except:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å {service['name']}")
        
        print("üëã –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")

if __name__ == "__main__":
    main()
