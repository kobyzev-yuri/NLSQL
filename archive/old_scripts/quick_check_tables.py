#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü –±–µ–∑ Vanna AI
"""

import psycopg2
import sys

def quick_check_tables():
    """–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = psycopg2.connect(
            host="localhost",
            database="test_docstructure", 
            user="postgres",
            password="1234"
        )
        
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        
        cursor.execute("""
            SELECT table_name 
            FROM information_schema.tables 
            WHERE table_schema = 'public' 
            ORDER BY table_name
        """)
        
        all_tables = [row[0] for row in cursor.fetchall()]
        print(f"üìä –í—Å–µ–≥–æ —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ: {len(all_tables)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
        print("\nüéØ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã...")
        priority_tables = [
            "equsers", "eq_departments", "eqgroups", "eqroles",
            "tbl_business_unit", "tbl_principal_assignment", 
            "tbl_incoming_payments", "tbl_accounts_document", "tbl_personal_account"
        ]
        
        existing_priority = []
        missing_priority = []
        
        for table in priority_tables:
            if table in all_tables:
                existing_priority.append(table)
                print(f"   ‚úÖ {table}")
            else:
                missing_priority.append(table)
                print(f"   ‚ùå {table}")
        
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   –°—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü: {len(existing_priority)}/{len(priority_tables)}")
        print(f"   –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö: {len(missing_priority)}")
        
        if missing_priority:
            print(f"\n‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã: {missing_priority}")
            print("üí° –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–º–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
        else:
            print("\n‚úÖ –í—Å–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞–π–¥–µ–Ω—ã!")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ–¥–Ω–æ–π –∏–∑ —Ç–∞–±–ª–∏—Ü
        if existing_priority:
            test_table = existing_priority[0]
            print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–∞–±–ª–∏—Ü—ã {test_table}...")
            
            cursor.execute(f"SELECT COUNT(*) FROM {test_table}")
            count = cursor.fetchone()[0]
            print(f"   –ó–∞–ø–∏—Å–µ–π –≤ {test_table}: {count}")
            
            if count > 0:
                cursor.execute(f"SELECT * FROM {test_table} LIMIT 3")
                rows = cursor.fetchall()
                print(f"   –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π:")
                for i, row in enumerate(rows, 1):
                    print(f"     {i}. {row}")
        
        cursor.close()
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("   - –ó–∞–ø—É—â–µ–Ω –ª–∏ PostgreSQL")
        print("   - –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
        print("   - –ó–∞–≥—Ä—É–∂–µ–Ω –ª–∏ –¥–∞–º–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")

if __name__ == "__main__":
    quick_check_tables()
