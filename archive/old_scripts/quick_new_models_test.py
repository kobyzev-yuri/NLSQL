#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –Ω–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π: sqlcoder –∏ phi3
"""

import sys
import time
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(str(Path(__file__).parent / "src"))

def quick_test_new_models():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –Ω–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π"""
    
    print("üöÄ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –Ω–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π")
    print("=" * 40)
    
    # –ù–æ–≤—ã–µ –º–æ–¥–µ–ª–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    new_models = [
        "sqlcoder:latest",
        "phi3:latest",
    ]
    
    # –ü—Ä–æ—Å—Ç–æ–π –≤–æ–ø—Ä–æ—Å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    question = "–ü–æ–∫–∞–∂–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
    
    for model_name in new_models:
        print(f"\nüß† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ {model_name}...")
        print("-" * 30)
        
        try:
            from src.vanna.vanna_pgvector_native import DocStructureVannaNative
            
            config = {
                'model': model_name,
                'database_url': 'postgresql://postgres:1234@localhost:5432/test_docstructure',
                'api_key': 'ollama',
                'base_url': 'http://localhost:11434/v1'
            }
            
            print(f"üì§ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...")
            start_time = time.time()
            vanna = DocStructureVannaNative(config)
            init_time = time.time()
            print(f"‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∑–∞ {init_time - start_time:.2f} —Å–µ–∫")
            
            print(f"‚ùì –í–æ–ø—Ä–æ—Å: {question}")
            print("üì§ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SQL...")
            start_time = time.time()
            sql = vanna.generate_sql(question)
            end_time = time.time()
            
            print(f"‚úÖ SQL —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∑–∞ {end_time - start_time:.2f} —Å–µ–∫")
            print(f"üí° SQL: {sql}")
            
            # –ë—ã—Å—Ç—Ä–∞—è –æ—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞
            if "equsers" in sql.lower():
                print("‚úÖ –û—Ç–ª–∏—á–Ω–æ: –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ equsers")
                quality = "–û—Ç–ª–∏—á–Ω–æ"
            elif "users" in sql.lower():
                print("‚ö†Ô∏è –°—Ä–µ–¥–Ω–µ: —Ç–∞–±–ª–∏—Ü–∞ users (–≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ)")
                quality = "–°—Ä–µ–¥–Ω–µ"
            else:
                print("‚ùå –ü–ª–æ—Ö–æ: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã")
                quality = "–ü–ª–æ—Ö–æ"
            
            print(f"üìä {model_name}: {quality}, {end_time - start_time:.2f} —Å–µ–∫")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å {model_name}: {e}")
    
    print(f"\nüèÜ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    quick_test_new_models()
