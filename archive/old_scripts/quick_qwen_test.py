#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç Qwen –º–æ–¥–µ–ª–µ–π - —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø—Ä–æ—Å—Ç–æ–π –≤–æ–ø—Ä–æ—Å
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(str(Path(__file__).parent / "src"))

from src.vanna.vanna_pgvector_native import DocStructureVannaNative

def quick_test_qwen():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç Qwen –º–æ–¥–µ–ª–µ–π"""
    
    print("üöÄ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç Qwen –º–æ–¥–µ–ª–µ–π")
    print("=" * 40)
    
    # –ü—Ä–æ—Å—Ç–æ–π –≤–æ–ø—Ä–æ—Å
    question = "–ü–æ–∫–∞–∂–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º Qwen3:8b
    print("\nüß† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Qwen3:8b...")
    qwen3_config = {
        'model': 'qwen3:8b',
        'database_url': 'postgresql://postgres:1234@localhost:5432/test_docstructure',
        'api_key': 'ollama',
        'base_url': 'http://localhost:11434/v1'
    }
    
    try:
        qwen3_vanna = DocStructureVannaNative(qwen3_config)
        sql = qwen3_vanna.generate_sql(question)
        print(f"‚úÖ Qwen3:8b - {sql}")
    except Exception as e:
        print(f"‚ùå Qwen3:8b - –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º Qwen2.5-coder:1.5b
    print("\nüíª –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Qwen2.5-coder:1.5b...")
    qwen25_coder_config = {
        'model': 'qwen2.5-coder:1.5b',
        'database_url': 'postgresql://postgres:1234@localhost:5432/test_docstructure',
        'api_key': 'ollama',
        'base_url': 'http://localhost:11434/v1'
    }
    
    try:
        qwen25_coder_vanna = DocStructureVannaNative(qwen25_coder_config)
        sql = qwen25_coder_vanna.generate_sql(question)
        print(f"‚úÖ Qwen2.5-coder:1.5b - {sql}")
    except Exception as e:
        print(f"‚ùå Qwen2.5-coder:1.5b - –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    quick_test_qwen()
