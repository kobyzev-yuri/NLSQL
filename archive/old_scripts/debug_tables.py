#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import sys
sys.path.append('src')

from src.vanna.vanna_pgvector_native import DocStructureVannaNative

def check_tables():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–∏–µ —Ç–∞–±–ª–∏—Ü—ã –µ—Å—Ç—å –≤ –±–∞–∑–µ"""
    
    config = {
        'model': 'llama3.1:8b',
        'database_url': 'postgresql://postgres:1234@localhost:5432/test_docstructure',
        'api_key': 'ollama',
        'base_url': 'http://localhost:11434/v1'
    }
    
    vanna = DocStructureVannaNative(config=config)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        # –ó–∞–ø—Ä–æ—Å –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
        all_tables_query = """
        SELECT table_name 
        FROM information_schema.tables 
        WHERE table_schema = 'public' 
        ORDER BY table_name
        """
        
        df = vanna.run_sql(all_tables_query)
        print(f"üìä –í—Å–µ–≥–æ —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ: {len(df)}")
        print("üìã –°–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü:")
        for table in df['table_name']:
            print(f"   - {table}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
        print("\nüéØ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã...")
        priority_tables = [
            "equsers", "eq_departments", "eqgroups", "eqroles",
            "tbl_business_unit", "tbl_principal_assignment", 
            "tbl_incoming_payments", "tbl_accounts_document", "tbl_personal_account"
        ]
        
        existing_priority = []
        missing_priority = []
        
        for table in priority_tables:
            if table in df['table_name'].values:
                existing_priority.append(table)
                print(f"   ‚úÖ {table}")
            else:
                missing_priority.append(table)
                print(f"   ‚ùå {table}")
        
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   –°—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü: {len(existing_priority)}/{len(priority_tables)}")
        print(f"   –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö: {len(missing_priority)}")
        
        if missing_priority:
            print(f"\n‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã: {missing_priority}")
            print("üí° –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–º–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
        else:
            print("\n‚úÖ –í—Å–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞–π–¥–µ–Ω—ã!")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    check_tables()
