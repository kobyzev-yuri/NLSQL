#!/usr/bin/env python3
"""
–ó–∞–ø—É—Å–∫ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è NL‚ÜíSQL –∞–≥–µ–Ω—Ç–∞
–§–æ–∫—É—Å –Ω–∞ SQL —Å –ø–æ—Å–ª–µ–¥—É—é—â–∏–º –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º –≤ –ø–ª–∞–Ω
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append('src')

from src.vanna.sql_focused_training import SQLFocusedTraining


def main():
    """–ó–∞–ø—É—Å–∫ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è"""
    
    print("üöÄ –ó–∞–ø—É—Å–∫ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è NL‚ÜíSQL –∞–≥–µ–Ω—Ç–∞")
    print("=" * 60)
    print("üìã –°—Ç—Ä–∞—Ç–µ–≥–∏—è: –û–±—É—á–µ–Ω–∏–µ –Ω–∞ SQL + –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤ –ø–ª–∞–Ω")
    print("üéØ –§–æ–∫—É—Å: –ö–∞—á–µ—Å—Ç–≤–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ SQL")
    print("=" * 60)
    
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    config = {
        'model': 'gpt-4o',
        'database_url': 'postgresql://postgres:1234@localhost:5432/test_docstructure',
        'api_key': 'sk-xF20r7G4tq9ezBMNKIjCPvva2io4S8FV',
        'base_url': 'https://api.proxyapi.ru/openai/v1'
    }
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç—Ä–µ–Ω–µ—Ä
        trainer = SQLFocusedTraining(config)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—É—á–µ–Ω–∏–µ
        if trainer.run_sql_training():
            print("\nüéâ –û–±—É—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≥–µ–Ω—Ç–∞
            print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞...")
            
            test_questions = [
                "–ü–æ–∫–∞–∂–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
                "–°–ø–∏—Å–æ–∫ –æ—Ç–¥–µ–ª–æ–≤",
                "–í—Å–µ –∫–ª–∏–µ–Ω—Ç—ã",
                "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ –æ—Ç–¥–µ–ª–∞–º",
                "–ü–æ—Ä—É—á–µ–Ω–∏—è —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏",
                "–ü–ª–∞—Ç–µ–∂–∏ –ø–æ –∫–ª–∏–µ–Ω—Ç–∞–º",
                "–°–∫–æ–ª—å–∫–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ –∫–∞–∂–¥–æ–º —Ä–µ–≥–∏–æ–Ω–µ?",
                "–ü–æ—Ä—É—á–µ–Ω–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü",
                "–¢–æ–ø-10 –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ —Å—É–º–º–µ –ø–æ—Ä—É—á–µ–Ω–∏–π",
                "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –æ—Ç–¥–µ–ª–∞ –ü—Ä–æ–¥–∞–∂–∏",
                "–ü–ª–∞—Ç–µ–∂–∏ –±–æ–ª—å—à–µ 1 –º–ª–Ω —Ä—É–±–ª–µ–π",
                "–ü–æ—Ä—É—á–µ–Ω–∏—è —Å—Ç–∞—Ä—à–µ 3 –¥–Ω–µ–π –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ê –±–æ–ª—å—à–µ 1 –º–ª–Ω —Ä—É–±–ª–µ–π"
            ]
            
            results = trainer.test_sql_generation(test_questions)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            trainer.save_training_results(results, "enhanced_sql_training_results.json")
            
            # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            success_count = sum(1 for r in results.values() if r['status'] == 'success')
            avg_quality = sum(r['quality_score'] for r in results.values()) / len(results)
            
            print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
            print(f"   –£—Å–ø–µ—à–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: {success_count}/{len(results)}")
            print(f"   –°—Ä–µ–¥–Ω–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ: {avg_quality:.2f}")
            
            # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            if avg_quality > 0.7:
                print("‚úÖ –ö–∞—á–µ—Å—Ç–≤–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ SQL —Ö–æ—Ä–æ—à–µ–µ!")
                print("üéØ –ú–æ–∂–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–æ–º –ø–ª–∞–Ω–æ–≤")
            elif avg_quality > 0.5:
                print("‚ö†Ô∏è –ö–∞—á–µ—Å—Ç–≤–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ SQL —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ–µ")
                print("üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –æ–±—É—á–µ–Ω–∏—è")
            else:
                print("‚ùå –ö–∞—á–µ—Å—Ç–≤–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ SQL —Ç—Ä–µ–±—É–µ—Ç —É–ª—É—á—à–µ–Ω–∏—è")
                print("üîß –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –æ–±—É—á–µ–Ω–∏—è")
            
        else:
            print("‚ùå –û–±—É—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–∞–º–∏")
            sys.exit(1)
            
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)


if __name__ == "__main__":
    main()
