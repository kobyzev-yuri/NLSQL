#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–µ–≤—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
–û–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞ - –æ–¥–∏–Ω —Ç–µ—Å—Ç
"""

from fastapi import FastAPI, Request, Form
from fastapi.responses import HTMLResponse, JSONResponse
import httpx
import logging
import asyncio
from typing import Optional

logger = logging.getLogger(__name__)

# –°–æ–∑–¥–∞–Ω–∏–µ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = FastAPI(
    title="NL‚ÜíSQL –¢–µ—Å—Ç –†–æ–ª–µ–π",
    description="–ü—Ä–æ—Å—Ç–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–æ–ª–µ–≤—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π",
    version="1.0.0"
)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API
NL_SQL_API_URL = "http://localhost:8000"

@app.get("/", response_class=HTMLResponse)
async def home():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –ø—Ä–æ—Å—Ç—ã–º —Ç–µ—Å—Ç–æ–º"""
    return """
    <!DOCTYPE html>
    <html lang="ru">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>–¢–µ—Å—Ç –†–æ–ª–µ–≤—ã—Ö –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                max-width: 800px;
                margin: 0 auto;
                padding: 20px;
                background: #f5f5f5;
            }
            .container {
                background: white;
                padding: 30px;
                border-radius: 10px;
                box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            }
            h1 {
                color: #333;
                text-align: center;
                margin-bottom: 30px;
            }
            .test-section {
                background: #f8f9fa;
                padding: 20px;
                border-radius: 8px;
                margin-bottom: 20px;
            }
            .role-selector {
                display: flex;
                gap: 10px;
                margin-bottom: 20px;
            }
            .role-btn {
                padding: 10px 20px;
                border: 2px solid #ddd;
                background: white;
                cursor: pointer;
                border-radius: 5px;
                transition: all 0.3s;
            }
            .role-btn.active {
                background: #007bff;
                color: white;
                border-color: #007bff;
            }
            .test-btn {
                width: 100%;
                padding: 15px;
                background: #28a745;
                color: white;
                border: none;
                border-radius: 5px;
                font-size: 18px;
                cursor: pointer;
                margin-bottom: 20px;
            }
            .test-btn:hover {
                background: #218838;
            }
            .result {
                margin-top: 20px;
                padding: 15px;
                border-radius: 5px;
                border-left: 4px solid #007bff;
                background: #f8f9fa;
            }
            .result.success {
                border-left-color: #28a745;
                background: #d4edda;
            }
            .result.error {
                border-left-color: #dc3545;
                background: #f8d7da;
            }
            .result.loading {
                text-align: center;
                color: #666;
                font-style: italic;
            }
            .sql-display {
                background: #2d3748;
                color: #e2e8f0;
                padding: 15px;
                border-radius: 5px;
                font-family: 'Courier New', monospace;
                overflow-x: auto;
                margin: 10px 0;
            }
            .table-display {
                overflow-x: auto;
                margin: 10px 0;
            }
            .table-display table {
                width: 100%;
                border-collapse: collapse;
                background: white;
            }
            .table-display th, .table-display td {
                padding: 8px 12px;
                text-align: left;
                border-bottom: 1px solid #dee2e6;
            }
            .table-display th {
                background: #f8f9fa;
                font-weight: 600;
            }
            .status {
                display: flex;
                gap: 20px;
                margin-bottom: 20px;
            }
            .status-item {
                padding: 5px 10px;
                border-radius: 3px;
                font-size: 12px;
                font-weight: bold;
            }
            .status-healthy {
                background: #d4edda;
                color: #155724;
            }
            .status-unhealthy {
                background: #f8d7da;
                color: #721c24;
            }
            .question-selector {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                gap: 10px;
                margin-bottom: 20px;
            }
            .question-btn {
                padding: 10px;
                border: 2px solid #ddd;
                background: white;
                cursor: pointer;
                border-radius: 5px;
                transition: all 0.3s;
                text-align: left;
                font-size: 14px;
            }
            .question-btn:hover {
                border-color: #007bff;
                background: #f8f9fa;
            }
            .question-btn.active {
                background: #007bff;
                color: white;
                border-color: #007bff;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>üîê –¢–µ—Å—Ç –†–æ–ª–µ–≤—ã—Ö –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π</h1>
            
            <div class="status">
                <div>
                    <span>API:</span>
                    <span id="api-status" class="status-item status-unhealthy">–ü—Ä–æ–≤–µ—Ä–∫–∞...</span>
                </div>
            </div>
            
            <div class="test-section">
                <h3>–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</h3>
                <div class="role-selector">
                    <div class="role-btn active" data-role="admin" data-user="admin">
                        üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä<br><small>–í–∏–¥–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ</small>
                    </div>
                    <div class="role-btn" data-role="manager" data-user="manager">
                        üë®‚Äçüíº –ú–µ–Ω–µ–¥–∂–µ—Ä<br><small>–¢–æ–ª—å–∫–æ IT –æ—Ç–¥–µ–ª</small>
                    </div>
                    <div class="role-btn" data-role="user" data-user="user">
                        üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å<br><small>–¢–æ–ª—å–∫–æ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ</small>
                    </div>
                </div>
                
                <h3>–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</h3>
                <div class="question-selector">
                    <button class="question-btn active" data-question="–ü–æ–∫–∞–∂–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π">
                        üë• –ü–æ–∫–∞–∂–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                    </button>
                    <button class="question-btn" data-question="–ü–æ–∫–∞–∂–∏ –∑–∞–∫–∞–∑—ã —Å—Ç–∞—Ä—à–µ 3 –¥–Ω–µ–π –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ê –±–æ–ª—å—à–µ 1 –º–ª–Ω —Ä—É–±–ª–µ–π">
                        üì¶ –ó–∞–∫–∞–∑—ã —Å—Ç–∞—Ä—à–µ 3 –¥–Ω–µ–π (–∫–∞—Ç–µ–≥–æ—Ä–∏—è –ê, >1–º–ª–Ω)
                    </button>
                    <button class="question-btn" data-question="–ò–∑ —á–µ–≥–æ —Å–¥–µ–ª–∞–Ω –ø—Ä–æ–¥—É–∫—Ç #876?">
                        üîç –ò–∑ —á–µ–≥–æ —Å–¥–µ–ª–∞–Ω –ø—Ä–æ–¥—É–∫—Ç #876?
                    </button>
                    <button class="question-btn" data-question="–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç —Å–æ–≤–µ—â–∞–Ω–∏–µ –ø–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É?">
                        üìÖ –°–æ–≤–µ—â–∞–Ω–∏–µ –ø–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É
                    </button>
                    <button class="question-btn" data-question="–ü–æ–∫–∞–∂–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –æ—Ç–¥–µ–ª–∞–º">
                        üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –æ—Ç–¥–µ–ª–∞–º
                    </button>
                    <button class="question-btn" data-question="–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ—Ç–¥–µ–ª–æ–≤">
                        üè¢ –°–ø–∏—Å–æ–∫ –æ—Ç–¥–µ–ª–æ–≤
                    </button>
                </div>
                
                <button class="test-btn" onclick="runTest()">
                    üß™ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç
                </button>
            </div>
            
            <div id="result" class="result" style="display: none;">
                <h3>–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞:</h3>
                <div id="resultContent"></div>
            </div>
        </div>
        
        <script>
            let currentRole = 'admin';
            let currentUser = 'admin';
            let currentQuestion = '–ü–æ–∫–∞–∂–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π';
            
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ API –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
            window.onload = function() {
                checkAPIStatus();
            };
            
            async function checkAPIStatus() {
                try {
                    const response = await fetch('http://localhost:8000/health');
                    const data = await response.json();
                    const statusEl = document.getElementById('api-status');
                    statusEl.textContent = data.status === 'healthy' ? '–†–∞–±–æ—Ç–∞–µ—Ç' : '–û—à–∏–±–∫–∞';
                    statusEl.className = 'status-item ' + (data.status === 'healthy' ? 'status-healthy' : 'status-unhealthy');
                } catch (error) {
                    document.getElementById('api-status').textContent = '–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω';
                    document.getElementById('api-status').className = 'status-item status-unhealthy';
                }
            }
            
            // –í—ã–±–æ—Ä —Ä–æ–ª–∏
            document.querySelectorAll('.role-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    document.querySelectorAll('.role-btn').forEach(b => b.classList.remove('active'));
                    this.classList.add('active');
                    currentRole = this.dataset.role;
                    currentUser = this.dataset.user;
                });
            });
            
            // –í—ã–±–æ—Ä –≤–æ–ø—Ä–æ—Å–∞
            document.querySelectorAll('.question-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    document.querySelectorAll('.question-btn').forEach(b => b.classList.remove('active'));
                    this.classList.add('active');
                    currentQuestion = this.dataset.question;
                });
            });
            
            async function runTest() {
                showLoading();
                
                try {
                    const response = await fetch('http://localhost:8000/query/execute', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            question: currentQuestion,
                            user_id: currentUser,
                            role: currentRole,
                            department: 'IT'
                        })
                    });
                    
                    const result = await response.json();
                    
                    if (response.ok) {
                        let tableHTML = '';
                        if (result.data && result.data.length > 0) {
                            tableHTML = '<h4>üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–ø—Ä–æ—Å–∞:</h4>';
                            tableHTML += '<div class="table-display">';
                            tableHTML += '<table>';
                            
                            // –ó–∞–≥–æ–ª–æ–≤–∫–∏
                            tableHTML += '<tr>';
                            result.columns.forEach(col => {
                                tableHTML += `<th>${col}</th>`;
                            });
                            tableHTML += '</tr>';
                            
                            // –î–∞–Ω–Ω—ã–µ
                            result.data.forEach(row => {
                                tableHTML += '<tr>';
                                result.columns.forEach(col => {
                                    tableHTML += `<td>${row[col] || ''}</td>`;
                                });
                                tableHTML += '</tr>';
                            });
                            
                            tableHTML += '</table>';
                            tableHTML += '</div>';
                        }
                        
                        showResult(`
                            <h4>‚úÖ –¢–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ</h4>
                            <p><strong>–í–æ–ø—Ä–æ—Å:</strong> ${currentQuestion}</p>
                            <p><strong>–†–æ–ª—å:</strong> ${currentRole} (${currentUser})</p>
                            <p><strong>–°—Ç—Ä–æ–∫ –ø–æ–ª—É—á–µ–Ω–æ:</strong> ${result.row_count}</p>
                            <p><strong>–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:</strong> ${result.execution_time.toFixed(3)}—Å</p>
                            <h4>üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã–π SQL:</h4>
                            <div class="sql-display">${result.sql}</div>
                            ${tableHTML}
                        `, 'success');
                    } else {
                        showResult(`<h4>‚ùå –û—à–∏–±–∫–∞:</h4><p>${result.detail || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}</p>`, 'error');
                    }
                } catch (error) {
                    showResult(`<h4>‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:</h4><p>${error.message}</p>`, 'error');
                }
            }
            
            function showLoading() {
                document.getElementById('result').style.display = 'block';
                document.getElementById('result').className = 'result loading';
                document.getElementById('resultContent').innerHTML = '‚è≥ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–µ—Å—Ç...';
            }
            
            function showResult(content, type) {
                document.getElementById('result').style.display = 'block';
                document.getElementById('result').className = `result ${type}`;
                document.getElementById('resultContent').innerHTML = content;
            }
        </script>
    </body>
    </html>
    """

if __name__ == "__main__":
    import uvicorn
    print("üß™ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...")
    print("üì± –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:3001")
    print("üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    uvicorn.run(app, host="0.0.0.0", port=3001)
