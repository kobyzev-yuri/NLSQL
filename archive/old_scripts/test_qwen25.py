#!/usr/bin/env python3
"""
–¢–µ—Å—Ç Qwen2.5:1.5b (–æ–±—ã—á–Ω–∞—è –≤–µ—Ä—Å–∏—è, –Ω–µ coder)
"""

import sys
import time
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(str(Path(__file__).parent / "src"))

def test_qwen25():
    """–¢–µ—Å—Ç Qwen2.5:1.5b"""
    
    print("üöÄ –¢–µ—Å—Ç Qwen2.5:1.5b (–æ–±—ã—á–Ω–∞—è –≤–µ—Ä—Å–∏—è)")
    print("=" * 50)
    
    try:
        from src.vanna.vanna_pgvector_native import DocStructureVannaNative
        
        config = {
            'model': 'qwen2.5:1.5b',  # –û–±—ã—á–Ω–∞—è –≤–µ—Ä—Å–∏—è, –Ω–µ coder
            'database_url': 'postgresql://postgres:1234@localhost:5432/test_docstructure',
            'api_key': 'ollama',
            'base_url': 'http://localhost:11434/v1'
        }
        
        print("üì§ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Vanna AI...")
        start_time = time.time()
        vanna = DocStructureVannaNative(config)
        init_time = time.time()
        print(f"‚úÖ Vanna AI –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∑–∞ {init_time - start_time:.2f} —Å–µ–∫")
        
        # –ü—Ä–æ—Å—Ç–æ–π –≤–æ–ø—Ä–æ—Å
        question = "–ü–æ–∫–∞–∂–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        print(f"\n‚ùì –í–æ–ø—Ä–æ—Å: {question}")
        
        print("üì§ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º SQL...")
        start_time = time.time()
        sql = vanna.generate_sql(question)
        end_time = time.time()
        print(f"‚úÖ SQL —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∑–∞ {end_time - start_time:.2f} —Å–µ–∫")
        print(f"üí° SQL: {sql}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ SQL
        if "equsers" in sql.lower():
            print("‚úÖ SQL —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É equsers")
        elif "users" in sql.lower():
            print("‚ö†Ô∏è SQL —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–∞–±–ª–∏—Ü—É users (–≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ)")
        else:
            print("‚ùå SQL –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–∂–∏–¥–∞–µ–º—ã—Ö —Ç–∞–±–ª–∏—Ü")
            
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –µ—â–µ –æ–¥–∏–Ω –≤–æ–ø—Ä–æ—Å
        print(f"\n‚ùì –í–æ–ø—Ä–æ—Å 2: –°–ø–∏—Å–æ–∫ –æ—Ç–¥–µ–ª–æ–≤")
        start_time = time.time()
        sql2 = vanna.generate_sql("–°–ø–∏—Å–æ–∫ –æ—Ç–¥–µ–ª–æ–≤")
        end_time = time.time()
        print(f"‚úÖ SQL —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∑–∞ {end_time - start_time:.2f} —Å–µ–∫")
        print(f"üí° SQL: {sql2}")
        
        if "eq_departments" in sql2.lower():
            print("‚úÖ SQL —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É eq_departments")
        else:
            print("‚ùå SQL –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–∞–±–ª–∏—Ü—É eq_departments")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_qwen25()
